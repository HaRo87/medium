version: 3

vars:
  CONTAINER_NAME: local-postgres

tasks:
  build-postgres-container:
    desc: Build the PostgreSQL image 
    status:
      - 'docker image ls {{.CONTAINER_NAME}} --format json | jq -r .CreatedAt | cut -f1 -d"+" | read created; echo $(( ($(date +%s) - $(date --date="$created" +%s) )/(60*60*24) )) | read daysago; [ $daysago -lt -1 ]'
    cmds:
      - docker build --tag {{.CONTAINER_NAME}} . 
  
  build-postgres-container-no-cache:
    desc: Build the PostgreSQL image without cache
    cmds:
      - docker build --no-cache --tag {{.CONTAINER_NAME}} .

  run-postgres:
    desc: Run the `postgres` container
    dotenv: ['.env']
    status:
      - '[ "$(docker ps -f name={{.CONTAINER_NAME}}_container --filter status=running -q)" != "" ]'
    cmds:
      - |
        docker run -d -p 5432:5432 -v ./psql_data:/var/lib/psql/data \
        --name {{.CONTAINER_NAME}}_container \
        -e  POSTGRES_USER=$PG_USER \
        -e  POSTGRES_PASSWORD=$PG_PASSWORD \
        -e  POSTGRES_DB=$PG_DATABASE \
        -t {{.CONTAINER_NAME}}

  stop-postgres:
    desc: Stop the `postgres` container
    cmds:
      - docker stop {{.CONTAINER_ID}}
      - docker rm {{.CONTAINER_NAME}}_container
    vars:
      CONTAINER_ID:
        sh: docker ps -f name={{.CONTAINER_NAME}}_container --filter status=running -q

  run-psql:
    desc: run psql
    deps: [run-postgres]
    cmds:
      - sleep 5s
      - ./psql.sh
